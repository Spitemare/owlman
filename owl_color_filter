#! /bin/dash

COLOR_NAMES="black red green yellow blue magenta cyan white NA bold"
OWL_COLORIZE_RESULTS=${OWL_COLORIZE_RESULTS:-true}

OWL_LOCAL_COLOR=${OWL_LOCAL_COLOR:-cyan}
OWL_CORE_COLOR=${OWL_CORE_COLOR:-green}
OWL_EXTRA_COLOR=${OWL_EXTRA_COLOR:-blue}
OWL_COMMUNITY_COLOR=${OWL_COMMUNITY_COLOR:-yellow}
OWL_TESTING_COLOR=${OWL_TESTING_COLOR:-magenta}
OWL_AUR_COLOR=${OWL_AUR_COLOR:-red}
OWL_OTHER_COLOR=${OWL_OTHER_COLOR:-default}
OWL_SEP_COLOR=${OWL_SEP_COLOR:-black}
OWL_NAME_COLOR=${OWL_NAME_COLOR:-bold}
OWL_VERSION_COLOR=${OWL_VERSION_COLOR:-black}
OWL_OBSOLETE_COLOR=${OWL_OBSOLETE_COLOR:-red}
OWL_INSTALLED_COLOR=${OWL_INSTALLED_COLOR:-cyan}

cprint() {
    color=$1
    shift
    if [ "$color" = "default" ] ; then
        printf "%s" "$@"
        return
    fi
    ci=0
    for c in $COLOR_NAMES; do
        [ "$color" = "$c" ] && break
        ci=$((ci + 1))
    done
    printf "\033[1;$((30 + ci))m%s\033[0m" "$@"
}

OBSOLETE_TAG="<$(cprint "$OWL_OBSOLETE_COLOR" "!")>"
INSTALLED_TAG=$(cprint "$OWL_INSTALLED_COLOR" "installed")

rprint() {
    repo=$1
    sep=$2
    pkgname=$3
    ver=$4
    shift 4
    end=$@
    case $repo in
        local)
            cprint "$OWL_LOCAL_COLOR" "$repo"
            ;;
        core)
            cprint "$OWL_CORE_COLOR" "$repo"
            ;;
        extra)
            cprint "$OWL_EXTRA_COLOR" "$repo"
            ;;
        community)
            cprint "$OWL_COMMUNITY_COLOR" "$repo"
            ;;
        testing)
            cprint "$OWL_TESTING_COLOR" "$repo"
            ;;
        aur)
            cprint "$OWL_AUR_COLOR" "$repo"
            ;;
        *)
            cprint "$OWL_OTHER_COLOR" "$repo"
            ;;
    esac
    cprint "$OWL_SEP_COLOR" "$sep"
    cprint "$OWL_NAME_COLOR" "$pkgname "
    cprint "$OWL_VERSION_COLOR" "$ver "
    end=$(printf "%s" "$end" | sed "s/<!>/$OBSOLETE_TAG/;s/\[installed\([^]]*\)\]/[$INSTALLED_TAG\1]/")
    printf "%s" "$end"
}

if [ -t 1 -a "$OWL_COLORIZE_RESULTS" = "true" ] ; then
    # the following line allows to read a line as if
    OLD_IFS="$IFS"
    IFS=""
    while read line ; do
        case "$line" in
            [a-z]*)
                # we need to re-enable space as argument separator
                IFS=" "
                rprint $(printf "%s" "$line" | sed 's/^\([-a-z]\+\)\(.\)\([^ ]\+\)\( \+[^ ]\+\)\(.*\)/\1 \2 \3 \4 \5/')
                ;;
            *)
                printf "%s\n" "$line"
                ;;
        esac
        printf "\n"
        IFS=""
    done
    IFS="$OLD_IFS"
else
    cat
fi
